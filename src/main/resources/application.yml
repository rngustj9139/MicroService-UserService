server:
    port: 0

spring:
    application:
        name: user-service
    h2:
        console:
            enabled: true
            settings:
                web-allow-others: true # 외부에서의 접속을 허용
            path: /h2-console # 브라우저에 localhost:포트번호/h2-console 입력하면 h2 창으로 이동하게 된다. (Generic H2 (Embedded)를 선택해야한다.)
    datasource:
        driver-class-name: org.h2.Driver
        url: jdbc:h2:mem:testdb # url은 jdbc:h2:mem:testdb 이고 user name은 sa이다.
        username: sa
        password:

eureka:
    instance:
        instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    client:
        register-with-eureka: true
        fetch-registry: true
        service-url:
            defaultZone: http://127.0.0.1:8761/eureka

#token:
#    expiration_time: 86400000 # jwt 만료기한 지정: 하루
#    secret: user_token # 임의의 값 지정하기

management: # 깃에 저장된 ecommerce.yml의 내용을 변경할때마다 user-service를 재가동해야함 이런 불펀을 해결하기위해 애플리케이션 변경을 모니터링하는 actuator나 spring cloud bus가 필요하다
    endpoints:
        web:
            exposure:
                include: refresh, health, beans # 3가지의 actuator 등록 (ecommerce.yml 파일을 변경하고 로컬 깃에 커밋한뒤, postman으로 http://localhost:~~~~/actuator/refresh에 아무 값 없이 post 요청을 보내야지 user-service의 재시작 없이 변경된 값을 적용 가능하다.)

greeting:
    message: Welcome to the simple E-commerce.